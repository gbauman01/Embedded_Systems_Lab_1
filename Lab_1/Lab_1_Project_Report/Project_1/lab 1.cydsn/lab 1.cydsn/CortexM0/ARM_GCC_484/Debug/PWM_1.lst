ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_1_initVar
  18              		.bss
  19              		.type	PWM_1_initVar, %object
  20              		.size	PWM_1_initVar, 1
  21              	PWM_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_1_Start,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_1_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_1_Start, %function
  29              	PWM_1_Start:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 3.20
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_1.c **** *
  15:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_1.c **** *
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC4/PWM_1.c **** 
  26:.\Generated_Source\PSoC4/PWM_1.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_1.c ****     #error PWM_v3_20 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_1.c **** 
  32:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:.\Generated_Source\PSoC4/PWM_1.c **** 
  34:.\Generated_Source\PSoC4/PWM_1.c **** 
  35:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_1.c **** *
  39:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_1.c **** *
  44:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_1.c **** *
  47:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_1.c **** *
  50:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_1.c **** *
  54:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_1.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_1.c ****     if(PWM_1_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC4/PWM_1.c ****     {
  60:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	PWM_1_Init
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:.\Generated_Source\PSoC4/PWM_1.c ****     }
  63:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	PWM_1_Enable
  64:.\Generated_Source\PSoC4/PWM_1.c **** 
  65:.\Generated_Source\PSoC4/PWM_1.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	PWM_1_initVar
  62              		.cfi_endproc
  63              	.LFE2:
  64              		.size	PWM_1_Start, .-PWM_1_Start
  65              		.section	.text.PWM_1_Init,"ax",%progbits
  66              		.align	2
  67              		.global	PWM_1_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	PWM_1_Init, %function
  71              	PWM_1_Init:
  72              	.LFB3:
  66:.\Generated_Source\PSoC4/PWM_1.c **** 
  67:.\Generated_Source\PSoC4/PWM_1.c **** 
  68:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_1.c **** *
  72:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC4/PWM_1.c **** *
  77:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_1.c **** *
  80:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_1.c **** *
  83:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_1.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 4


  89:.\Generated_Source\PSoC4/PWM_1.c **** 
  90:.\Generated_Source\PSoC4/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_1.c **** 
  97:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_1.c **** 
 104:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
 115:.\Generated_Source\PSoC4/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 1E4B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 1A4B     		ldr	r3, .L6
  94 0016 FA1D     		add	r2, r7, #7
  95 0018 1278     		ldrb	r2, [r2]
  96 001a 0921     		mov	r1, #9
  97 001c 0A43     		orr	r2, r1
  98 001e D2B2     		uxtb	r2, r2
  99 0020 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_1.c **** 
 123:.\Generated_Source\PSoC4/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 100              		.loc 1 126 0
 101 0022 184B     		ldr	r3, .L6+4
 102 0024 174A     		ldr	r2, .L6+4
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 5


 103 0026 1278     		ldrb	r2, [r2]
 104 0028 D2B2     		uxtb	r2, r2
 105 002a 0121     		mov	r1, #1
 106 002c 0A43     		orr	r2, r1
 107 002e D2B2     		uxtb	r2, r2
 108 0030 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_1.c **** 
 133:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 109              		.loc 1 133 0
 110 0032 FF20     		mov	r0, #255
 111 0034 FFF7FEFF 		bl	PWM_1_WriteCounter
 134:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 112              		.loc 1 136 0
 113 0038 FF20     		mov	r0, #255
 114 003a FFF7FEFF 		bl	PWM_1_WritePeriod
 137:.\Generated_Source\PSoC4/PWM_1.c **** 
 138:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 115              		.loc 1 141 0
 116 003e 7F20     		mov	r0, #127
 117 0040 FFF7FEFF 		bl	PWM_1_WriteCompare1
 142:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 118              		.loc 1 142 0
 119 0044 3F20     		mov	r0, #63
 120 0046 FFF7FEFF 		bl	PWM_1_WriteCompare2
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_1.c **** 
 153:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 121              		.loc 1 154 0
 122 004a 0020     		mov	r0, #0
 123 004c FFF7FEFF 		bl	PWM_1_SetInterruptMode
 155:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_1.c **** 
 157:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_1.c ****     #else
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 6


 163:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_1.c **** 
 165:.\Generated_Source\PSoC4/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 124              		.loc 1 167 0
 125 0050 BC1D     		add	r4, r7, #6
 126 0052 FFF7FEFF 		bl	CyEnterCriticalSection
 127 0056 031C     		mov	r3, r0
 128 0058 2370     		strb	r3, [r4]
 168:.\Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 129              		.loc 1 169 0
 130 005a 0B4B     		ldr	r3, .L6+8
 131 005c 0A4A     		ldr	r2, .L6+8
 132 005e 1278     		ldrb	r2, [r2]
 133 0060 D2B2     		uxtb	r2, r2
 134 0062 1021     		mov	r1, #16
 135 0064 0A43     		orr	r2, r1
 136 0066 D2B2     		uxtb	r2, r2
 137 0068 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC4/PWM_1.c **** 
 171:.\Generated_Source\PSoC4/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 138              		.loc 1 172 0
 139 006a BB1D     		add	r3, r7, #6
 140 006c 1B78     		ldrb	r3, [r3]
 141 006e 181C     		mov	r0, r3
 142 0070 FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC4/PWM_1.c **** 
 174:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_ClearFIFO();
 143              		.loc 1 176 0
 144 0074 FFF7FEFF 		bl	PWM_1_ClearFIFO
 177:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_1.c **** }
 145              		.loc 1 179 0
 146 0078 BD46     		mov	sp, r7
 147 007a 03B0     		add	sp, sp, #12
 148              		@ sp needed
 149 007c 90BD     		pop	{r4, r7, pc}
 150              	.L7:
 151 007e C046     		.align	2
 152              	.L6:
 153 0080 73000F40 		.word	1074724979
 154 0084 93000F40 		.word	1074725011
 155 0088 92000F40 		.word	1074725010
 156              		.cfi_endproc
 157              	.LFE3:
 158              		.size	PWM_1_Init, .-PWM_1_Init
 159              		.section	.text.PWM_1_Enable,"ax",%progbits
 160              		.align	2
 161              		.global	PWM_1_Enable
 162              		.code	16
 163              		.thumb_func
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 7


 164              		.type	PWM_1_Enable, %function
 165              	PWM_1_Enable:
 166              	.LFB4:
 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c **** 
 182:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_1.c **** *
 186:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_1.c **** *
 189:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_1.c **** *
 192:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_1.c **** *
 195:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_1.c **** *
 198:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_1.c **** {
 167              		.loc 1 200 0
 168              		.cfi_startproc
 169 0000 80B5     		push	{r7, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_1.c **** 
 207:.\Generated_Source\PSoC4/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
 175              		.loc 1 209 0
 176 0004 054B     		ldr	r3, .L9
 177 0006 054A     		ldr	r2, .L9
 178 0008 1278     		ldrb	r2, [r2]
 179 000a D2B2     		uxtb	r2, r2
 180 000c 8021     		mov	r1, #128
 181 000e 4942     		neg	r1, r1
 182 0010 0A43     		orr	r2, r1
 183 0012 D2B2     		uxtb	r2, r2
 184 0014 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_1.c **** }
 185              		.loc 1 211 0
 186 0016 BD46     		mov	sp, r7
 187              		@ sp needed
 188 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 8


 189              	.L10:
 190 001a C046     		.align	2
 191              	.L9:
 192 001c 73000F40 		.word	1074724979
 193              		.cfi_endproc
 194              	.LFE4:
 195              		.size	PWM_1_Enable, .-PWM_1_Enable
 196              		.section	.text.PWM_1_Stop,"ax",%progbits
 197              		.align	2
 198              		.global	PWM_1_Stop
 199              		.code	16
 200              		.thumb_func
 201              		.type	PWM_1_Stop, %function
 202              	PWM_1_Stop:
 203              	.LFB5:
 212:.\Generated_Source\PSoC4/PWM_1.c **** 
 213:.\Generated_Source\PSoC4/PWM_1.c **** 
 214:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_1.c **** *
 218:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_1.c **** *
 222:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_1.c **** *
 225:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_1.c **** *
 228:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_1.c **** *
 232:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_1.c **** {
 204              		.loc 1 234 0
 205              		.cfi_startproc
 206 0000 80B5     		push	{r7, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
 212              		.loc 1 236 0
 213 0004 044B     		ldr	r3, .L12
 214 0006 044A     		ldr	r2, .L12
 215 0008 1278     		ldrb	r2, [r2]
 216 000a D1B2     		uxtb	r1, r2
 217 000c 7F22     		mov	r2, #127
 218 000e 0A40     		and	r2, r1
 219 0010 D2B2     		uxtb	r2, r2
 220 0012 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 9


 237:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_1.c **** 
 239:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_1.c **** }
 221              		.loc 1 244 0
 222 0014 BD46     		mov	sp, r7
 223              		@ sp needed
 224 0016 80BD     		pop	{r7, pc}
 225              	.L13:
 226              		.align	2
 227              	.L12:
 228 0018 73000F40 		.word	1074724979
 229              		.cfi_endproc
 230              	.LFE5:
 231              		.size	PWM_1_Stop, .-PWM_1_Stop
 232              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 233              		.align	2
 234              		.global	PWM_1_WriteCounter
 235              		.code	16
 236              		.thumb_func
 237              		.type	PWM_1_WriteCounter, %function
 238              	PWM_1_WriteCounter:
 239              	.LFB6:
 245:.\Generated_Source\PSoC4/PWM_1.c **** 
 246:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_1.c **** 
 249:.\Generated_Source\PSoC4/PWM_1.c **** 
 250:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_1.c ****         *
 254:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_1.c ****         *
 258:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_1.c ****         *
 262:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_1.c ****         *
 265:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_1.c ****         {
 268:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_1.c **** 
 270:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 10


 275:.\Generated_Source\PSoC4/PWM_1.c **** 
 276:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_1.c **** 
 279:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC4/PWM_1.c **** 
 281:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC4/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_1.c **** 
 288:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_1.c **** 
 295:.\Generated_Source\PSoC4/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_1.c **** 
 300:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_1.c ****         }
 304:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_1.c **** 
 306:.\Generated_Source\PSoC4/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_1.c **** 
 308:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_1.c **** 
 310:.\Generated_Source\PSoC4/PWM_1.c **** 
 311:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_1.c ****         *
 315:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_1.c ****         *
 318:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_1.c ****         *
 322:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 323:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_1.c ****         *
 325:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_1.c ****         {
 328:.\Generated_Source\PSoC4/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC4/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_1.c ****             #else
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 11


 332:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_1.c **** 
 335:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_1.c ****         }
 340:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_1.c **** 
 342:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_1.c **** 
 344:.\Generated_Source\PSoC4/PWM_1.c **** 
 345:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_1.c ****     *
 349:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_1.c ****     *
 352:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_1.c ****     *
 356:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_1.c ****     *
 359:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_1.c ****     {
 362:.\Generated_Source\PSoC4/PWM_1.c **** 
 363:.\Generated_Source\PSoC4/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_1.c **** 
 370:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_1.c ****     }
 375:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_1.c **** 
 377:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_1.c **** 
 379:.\Generated_Source\PSoC4/PWM_1.c **** 
 380:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_1.c **** 
 382:.\Generated_Source\PSoC4/PWM_1.c **** 
 383:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_1.c ****     *
 387:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 12


 389:.\Generated_Source\PSoC4/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_1.c ****     *
 393:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_1.c ****     *
 396:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_1.c ****     *
 399:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_1.c ****     *
 402:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCounter(uint8 counter) \
 404:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_1.c ****     {
 240              		.loc 1 405 0
 241              		.cfi_startproc
 242 0000 80B5     		push	{r7, lr}
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 7, -8
 245              		.cfi_offset 14, -4
 246 0002 82B0     		sub	sp, sp, #8
 247              		.cfi_def_cfa_offset 16
 248 0004 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 250 0006 021C     		mov	r2, r0
 251 0008 FB1D     		add	r3, r7, #7
 252 000a 1A70     		strb	r2, [r3]
 406:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_COUNTER_LSB_PTR, counter);
 253              		.loc 1 406 0
 254 000c 034B     		ldr	r3, .L15
 255 000e FA1D     		add	r2, r7, #7
 256 0010 1278     		ldrb	r2, [r2]
 257 0012 1A70     		strb	r2, [r3]
 407:.\Generated_Source\PSoC4/PWM_1.c ****     }
 258              		.loc 1 407 0
 259 0014 BD46     		mov	sp, r7
 260 0016 02B0     		add	sp, sp, #8
 261              		@ sp needed
 262 0018 80BD     		pop	{r7, pc}
 263              	.L16:
 264 001a C046     		.align	2
 265              	.L15:
 266 001c 03000F40 		.word	1074724867
 267              		.cfi_endproc
 268              	.LFE6:
 269              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 270              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 271              		.align	2
 272              		.global	PWM_1_ReadCounter
 273              		.code	16
 274              		.thumb_func
 275              		.type	PWM_1_ReadCounter, %function
 276              	PWM_1_ReadCounter:
 277              	.LFB7:
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 13


 408:.\Generated_Source\PSoC4/PWM_1.c **** 
 409:.\Generated_Source\PSoC4/PWM_1.c **** 
 410:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/PWM_1.c ****     *
 414:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_1.c ****     *
 418:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_1.c ****     *
 421:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_1.c ****     *
 424:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_1.c ****     {
 278              		.loc 1 426 0
 279              		.cfi_startproc
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC4/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 286              		.loc 1 430 0
 287 0004 034B     		ldr	r3, .L19
 288 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_1.c **** 
 432:.\Generated_Source\PSoC4/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 289              		.loc 1 433 0
 290 0008 034B     		ldr	r3, .L19+4
 291 000a 1B78     		ldrb	r3, [r3]
 292 000c DBB2     		uxtb	r3, r3
 434:.\Generated_Source\PSoC4/PWM_1.c ****     }
 293              		.loc 1 434 0
 294 000e 181C     		mov	r0, r3
 295 0010 BD46     		mov	sp, r7
 296              		@ sp needed
 297 0012 80BD     		pop	{r7, pc}
 298              	.L20:
 299              		.align	2
 300              	.L19:
 301 0014 13000F40 		.word	1074724883
 302 0018 53000F40 		.word	1074724947
 303              		.cfi_endproc
 304              	.LFE7:
 305              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 306              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 307              		.align	2
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 14


 308              		.global	PWM_1_ClearFIFO
 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_1_ClearFIFO, %function
 312              	PWM_1_ClearFIFO:
 313              	.LFB8:
 435:.\Generated_Source\PSoC4/PWM_1.c **** 
 436:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_1.c **** 
 438:.\Generated_Source\PSoC4/PWM_1.c **** 
 439:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/PWM_1.c ****         *
 443:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_1.c ****         *
 446:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_1.c ****         *
 449:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_1.c ****         *
 452:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_1.c ****         {
 314              		.loc 1 454 0
 315              		.cfi_startproc
 316 0000 80B5     		push	{r7, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
 320 0002 00AF     		add	r7, sp, #0
 321              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 322              		.loc 1 455 0
 323 0004 01E0     		b	.L22
 324              	.L23:
 456:.\Generated_Source\PSoC4/PWM_1.c ****             {
 457:.\Generated_Source\PSoC4/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 325              		.loc 1 457 0
 326 0006 FFF7FEFF 		bl	PWM_1_ReadCapture
 327              	.L22:
 455:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 328              		.loc 1 455 0 discriminator 1
 329 000a FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 330 000e 031C     		mov	r3, r0
 331 0010 1A1C     		mov	r2, r3
 332 0012 1023     		mov	r3, #16
 333 0014 1340     		and	r3, r2
 334 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC4/PWM_1.c ****             }
 459:.\Generated_Source\PSoC4/PWM_1.c ****         }
 335              		.loc 1 459 0
 336 0018 BD46     		mov	sp, r7
 337              		@ sp needed
 338 001a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 15


 339              		.cfi_endproc
 340              	.LFE8:
 341              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 342              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 343              		.align	2
 344              		.global	PWM_1_WritePeriod
 345              		.code	16
 346              		.thumb_func
 347              		.type	PWM_1_WritePeriod, %function
 348              	PWM_1_WritePeriod:
 349              	.LFB9:
 460:.\Generated_Source\PSoC4/PWM_1.c **** 
 461:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_1.c **** 
 463:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_1.c **** 
 465:.\Generated_Source\PSoC4/PWM_1.c **** 
 466:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_1.c **** *
 470:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_1.c **** *
 474:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_1.c **** *
 478:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_1.c **** *
 481:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint8 period) 
 483:.\Generated_Source\PSoC4/PWM_1.c **** {
 350              		.loc 1 483 0
 351              		.cfi_startproc
 352 0000 80B5     		push	{r7, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 82B0     		sub	sp, sp, #8
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 360 0006 021C     		mov	r2, r0
 361 0008 FB1D     		add	r3, r7, #7
 362 000a 1A70     		strb	r2, [r3]
 484:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_PERIOD_LSB_PTR, period);
 363              		.loc 1 487 0
 364 000c 034B     		ldr	r3, .L25
 365 000e FA1D     		add	r2, r7, #7
 366 0010 1278     		ldrb	r2, [r2]
 367 0012 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 16


 488:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_1.c **** }
 368              		.loc 1 489 0
 369 0014 BD46     		mov	sp, r7
 370 0016 02B0     		add	sp, sp, #8
 371              		@ sp needed
 372 0018 80BD     		pop	{r7, pc}
 373              	.L26:
 374 001a C046     		.align	2
 375              	.L25:
 376 001c 43000F40 		.word	1074724931
 377              		.cfi_endproc
 378              	.LFE9:
 379              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 380              		.section	.text.PWM_1_WriteCompare1,"ax",%progbits
 381              		.align	2
 382              		.global	PWM_1_WriteCompare1
 383              		.code	16
 384              		.thumb_func
 385              		.type	PWM_1_WriteCompare1, %function
 386              	PWM_1_WriteCompare1:
 387              	.LFB10:
 490:.\Generated_Source\PSoC4/PWM_1.c **** 
 491:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_1.c **** 
 493:.\Generated_Source\PSoC4/PWM_1.c **** 
 494:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_1.c ****     *
 498:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_1.c ****     *
 505:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_1.c ****     *
 508:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_1.c ****     *
 511:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_1.c ****     *
 515:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare(uint8 compare) \
 517:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_1.c ****     {
 519:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 17


 525:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_1.c ****     }
 533:.\Generated_Source\PSoC4/PWM_1.c **** 
 534:.\Generated_Source\PSoC4/PWM_1.c **** 
 535:.\Generated_Source\PSoC4/PWM_1.c **** #else
 536:.\Generated_Source\PSoC4/PWM_1.c **** 
 537:.\Generated_Source\PSoC4/PWM_1.c **** 
 538:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_1.c ****     *
 542:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_1.c ****     *
 548:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_1.c ****     *
 551:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_1.c ****     *
 554:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare1(uint8 compare) \
 556:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_1.c ****     {
 388              		.loc 1 557 0
 389              		.cfi_startproc
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 021C     		mov	r2, r0
 399 0008 FB1D     		add	r3, r7, #7
 400 000a 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 401              		.loc 1 561 0
 402 000c 034B     		ldr	r3, .L28
 403 000e FA1D     		add	r2, r7, #7
 404 0010 1278     		ldrb	r2, [r2]
 405 0012 1A70     		strb	r2, [r3]
 562:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_1.c ****     }
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 18


 406              		.loc 1 563 0
 407 0014 BD46     		mov	sp, r7
 408 0016 02B0     		add	sp, sp, #8
 409              		@ sp needed
 410 0018 80BD     		pop	{r7, pc}
 411              	.L29:
 412 001a C046     		.align	2
 413              	.L28:
 414 001c 23000F40 		.word	1074724899
 415              		.cfi_endproc
 416              	.LFE10:
 417              		.size	PWM_1_WriteCompare1, .-PWM_1_WriteCompare1
 418              		.section	.text.PWM_1_WriteCompare2,"ax",%progbits
 419              		.align	2
 420              		.global	PWM_1_WriteCompare2
 421              		.code	16
 422              		.thumb_func
 423              		.type	PWM_1_WriteCompare2, %function
 424              	PWM_1_WriteCompare2:
 425              	.LFB11:
 564:.\Generated_Source\PSoC4/PWM_1.c **** 
 565:.\Generated_Source\PSoC4/PWM_1.c **** 
 566:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_1.c ****     *
 570:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_1.c ****     *
 577:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_1.c ****     *
 580:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_1.c ****     *
 583:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare2(uint8 compare) \
 585:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_1.c ****     {
 426              		.loc 1 586 0
 427              		.cfi_startproc
 428 0000 80B5     		push	{r7, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 82B0     		sub	sp, sp, #8
 433              		.cfi_def_cfa_offset 16
 434 0004 00AF     		add	r7, sp, #0
 435              		.cfi_def_cfa_register 7
 436 0006 021C     		mov	r2, r0
 437 0008 FB1D     		add	r3, r7, #7
 438 000a 1A70     		strb	r2, [r3]
 587:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 19


 588:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, compare);
 439              		.loc 1 590 0
 440 000c 034B     		ldr	r3, .L31
 441 000e FA1D     		add	r2, r7, #7
 442 0010 1278     		ldrb	r2, [r2]
 443 0012 1A70     		strb	r2, [r3]
 591:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_1.c ****     }
 444              		.loc 1 592 0
 445 0014 BD46     		mov	sp, r7
 446 0016 02B0     		add	sp, sp, #8
 447              		@ sp needed
 448 0018 80BD     		pop	{r7, pc}
 449              	.L32:
 450 001a C046     		.align	2
 451              	.L31:
 452 001c 33000F40 		.word	1074724915
 453              		.cfi_endproc
 454              	.LFE11:
 455              		.size	PWM_1_WriteCompare2, .-PWM_1_WriteCompare2
 456              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 457              		.align	2
 458              		.global	PWM_1_SetInterruptMode
 459              		.code	16
 460              		.thumb_func
 461              		.type	PWM_1_SetInterruptMode, %function
 462              	PWM_1_SetInterruptMode:
 463              	.LFB12:
 593:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_1.c **** 
 595:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_1.c **** 
 597:.\Generated_Source\PSoC4/PWM_1.c **** 
 598:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_1.c ****     *
 602:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_1.c ****     *
 605:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_1.c ****     *
 608:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_1.c ****     *
 611:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_1.c ****     {
 614:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear existing data */
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 20


 620:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_1.c **** 
 622:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_1.c **** 
 630:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_1.c ****     }
 632:.\Generated_Source\PSoC4/PWM_1.c **** 
 633:.\Generated_Source\PSoC4/PWM_1.c **** 
 634:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_1.c ****     *
 638:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_1.c ****     *
 641:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_1.c ****     *
 644:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_1.c ****     *
 647:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_1.c ****     {
 650:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_1.c **** 
 655:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_1.c ****     }
 664:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_1.c **** 
 666:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_1.c **** 
 668:.\Generated_Source\PSoC4/PWM_1.c **** 
 669:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_1.c ****     *
 673:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_1.c ****     *
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 21


 677:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM_1.c ****     *
 680:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_1.c ****     *
 683:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_1.c ****     {
 464              		.loc 1 685 0
 465              		.cfi_startproc
 466 0000 80B5     		push	{r7, lr}
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 7, -8
 469              		.cfi_offset 14, -4
 470 0002 82B0     		sub	sp, sp, #8
 471              		.cfi_def_cfa_offset 16
 472 0004 00AF     		add	r7, sp, #0
 473              		.cfi_def_cfa_register 7
 474 0006 021C     		mov	r2, r0
 475 0008 FB1D     		add	r3, r7, #7
 476 000a 1A70     		strb	r2, [r3]
 686:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 477              		.loc 1 686 0
 478 000c 034B     		ldr	r3, .L34
 479 000e FA1D     		add	r2, r7, #7
 480 0010 1278     		ldrb	r2, [r2]
 481 0012 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC4/PWM_1.c ****     }
 482              		.loc 1 687 0
 483 0014 BD46     		mov	sp, r7
 484 0016 02B0     		add	sp, sp, #8
 485              		@ sp needed
 486 0018 80BD     		pop	{r7, pc}
 487              	.L35:
 488 001a C046     		.align	2
 489              	.L34:
 490 001c 82000F40 		.word	1074724994
 491              		.cfi_endproc
 492              	.LFE12:
 493              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 494              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 495              		.align	2
 496              		.global	PWM_1_ReadStatusRegister
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_1_ReadStatusRegister, %function
 500              	PWM_1_ReadStatusRegister:
 501              	.LFB13:
 688:.\Generated_Source\PSoC4/PWM_1.c **** 
 689:.\Generated_Source\PSoC4/PWM_1.c **** 
 690:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_1.c ****     *
 694:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current state of the status register.
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 22


 696:.\Generated_Source\PSoC4/PWM_1.c ****     *
 697:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_1.c ****     *
 700:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_1.c ****     *
 710:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM_1.c ****     {
 502              		.loc 1 712 0
 503              		.cfi_startproc
 504 0000 80B5     		push	{r7, lr}
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 14, -4
 508 0002 00AF     		add	r7, sp, #0
 509              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 510              		.loc 1 713 0
 511 0004 024B     		ldr	r3, .L38
 512 0006 1B78     		ldrb	r3, [r3]
 513 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC4/PWM_1.c ****     }
 514              		.loc 1 714 0
 515 000a 181C     		mov	r0, r3
 516 000c BD46     		mov	sp, r7
 517              		@ sp needed
 518 000e 80BD     		pop	{r7, pc}
 519              	.L39:
 520              		.align	2
 521              	.L38:
 522 0010 62000F40 		.word	1074724962
 523              		.cfi_endproc
 524              	.LFE13:
 525              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 526              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 527              		.align	2
 528              		.global	PWM_1_ReadControlRegister
 529              		.code	16
 530              		.thumb_func
 531              		.type	PWM_1_ReadControlRegister, %function
 532              	PWM_1_ReadControlRegister:
 533              	.LFB14:
 715:.\Generated_Source\PSoC4/PWM_1.c **** 
 716:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_1.c **** 
 718:.\Generated_Source\PSoC4/PWM_1.c **** 
 719:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 23


 721:.\Generated_Source\PSoC4/PWM_1.c **** 
 722:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_1.c ****     *
 726:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_1.c ****     *
 730:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_1.c ****     *
 733:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_1.c ****     *
 736:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_1.c ****     {
 534              		.loc 1 738 0
 535              		.cfi_startproc
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 82B0     		sub	sp, sp, #8
 541              		.cfi_def_cfa_offset 16
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_1.c **** 
 741:.\Generated_Source\PSoC4/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 544              		.loc 1 741 0
 545 0006 054A     		ldr	r2, .L42
 546 0008 FB1D     		add	r3, r7, #7
 547 000a 1278     		ldrb	r2, [r2]
 548 000c 1A70     		strb	r2, [r3]
 742:.\Generated_Source\PSoC4/PWM_1.c ****         return (result);
 549              		.loc 1 742 0
 550 000e FB1D     		add	r3, r7, #7
 551 0010 1B78     		ldrb	r3, [r3]
 743:.\Generated_Source\PSoC4/PWM_1.c ****     }
 552              		.loc 1 743 0
 553 0012 181C     		mov	r0, r3
 554 0014 BD46     		mov	sp, r7
 555 0016 02B0     		add	sp, sp, #8
 556              		@ sp needed
 557 0018 80BD     		pop	{r7, pc}
 558              	.L43:
 559 001a C046     		.align	2
 560              	.L42:
 561 001c 73000F40 		.word	1074724979
 562              		.cfi_endproc
 563              	.LFE14:
 564              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 565              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 566              		.align	2
 567              		.global	PWM_1_WriteControlRegister
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 24


 568              		.code	16
 569              		.thumb_func
 570              		.type	PWM_1_WriteControlRegister, %function
 571              	PWM_1_WriteControlRegister:
 572              	.LFB15:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c **** 
 746:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_1.c ****     *
 750:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_1.c ****     *
 754:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_1.c ****     *
 761:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_1.c ****     *
 764:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_1.c ****     {
 573              		.loc 1 766 0
 574              		.cfi_startproc
 575 0000 80B5     		push	{r7, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 579 0002 82B0     		sub	sp, sp, #8
 580              		.cfi_def_cfa_offset 16
 581 0004 00AF     		add	r7, sp, #0
 582              		.cfi_def_cfa_register 7
 583 0006 021C     		mov	r2, r0
 584 0008 FB1D     		add	r3, r7, #7
 585 000a 1A70     		strb	r2, [r3]
 767:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 586              		.loc 1 767 0
 587 000c 034B     		ldr	r3, .L45
 588 000e FA1D     		add	r2, r7, #7
 589 0010 1278     		ldrb	r2, [r2]
 590 0012 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC4/PWM_1.c ****     }
 591              		.loc 1 768 0
 592 0014 BD46     		mov	sp, r7
 593 0016 02B0     		add	sp, sp, #8
 594              		@ sp needed
 595 0018 80BD     		pop	{r7, pc}
 596              	.L46:
 597 001a C046     		.align	2
 598              	.L45:
 599 001c 73000F40 		.word	1074724979
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 25


 600              		.cfi_endproc
 601              	.LFE15:
 602              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 603              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 604              		.align	2
 605              		.global	PWM_1_ReadCapture
 606              		.code	16
 607              		.thumb_func
 608              		.type	PWM_1_ReadCapture, %function
 609              	PWM_1_ReadCapture:
 610              	.LFB16:
 769:.\Generated_Source\PSoC4/PWM_1.c **** 
 770:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_1.c **** 
 772:.\Generated_Source\PSoC4/PWM_1.c **** 
 773:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_1.c **** 
 775:.\Generated_Source\PSoC4/PWM_1.c **** 
 776:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_1.c ****     *
 780:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_1.c ****     *
 783:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_1.c ****     *
 786:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_1.c ****     *
 789:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_1.c ****     {
 611              		.loc 1 791 0
 612              		.cfi_startproc
 613 0000 80B5     		push	{r7, lr}
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 7, -8
 616              		.cfi_offset 14, -4
 617 0002 00AF     		add	r7, sp, #0
 618              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 619              		.loc 1 792 0
 620 0004 024B     		ldr	r3, .L49
 621 0006 1B78     		ldrb	r3, [r3]
 622 0008 DBB2     		uxtb	r3, r3
 793:.\Generated_Source\PSoC4/PWM_1.c ****     }
 623              		.loc 1 793 0
 624 000a 181C     		mov	r0, r3
 625 000c BD46     		mov	sp, r7
 626              		@ sp needed
 627 000e 80BD     		pop	{r7, pc}
 628              	.L50:
 629              		.align	2
 630              	.L49:
 631 0010 53000F40 		.word	1074724947
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 26


 632              		.cfi_endproc
 633              	.LFE16:
 634              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 635              		.section	.text.PWM_1_ReadCompare1,"ax",%progbits
 636              		.align	2
 637              		.global	PWM_1_ReadCompare1
 638              		.code	16
 639              		.thumb_func
 640              		.type	PWM_1_ReadCompare1, %function
 641              	PWM_1_ReadCompare1:
 642              	.LFB17:
 794:.\Generated_Source\PSoC4/PWM_1.c **** 
 795:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_1.c **** 
 797:.\Generated_Source\PSoC4/PWM_1.c **** 
 798:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_1.c **** 
 800:.\Generated_Source\PSoC4/PWM_1.c **** 
 801:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_1.c ****     *
 805:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_1.c ****     *
 809:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_1.c ****     *
 812:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_1.c ****     *
 815:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_1.c ****     {
 818:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_1.c ****             return ((uint8)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_1.c ****     }
 824:.\Generated_Source\PSoC4/PWM_1.c **** 
 825:.\Generated_Source\PSoC4/PWM_1.c **** #else
 826:.\Generated_Source\PSoC4/PWM_1.c **** 
 827:.\Generated_Source\PSoC4/PWM_1.c **** 
 828:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_1.c ****     *
 832:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_1.c ****     *
 835:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_1.c ****     *
 838:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 27


 840:.\Generated_Source\PSoC4/PWM_1.c ****     *
 841:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_1.c ****     {
 643              		.loc 1 843 0
 644              		.cfi_startproc
 645 0000 80B5     		push	{r7, lr}
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0002 00AF     		add	r7, sp, #0
 650              		.cfi_def_cfa_register 7
 844:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 651              		.loc 1 844 0
 652 0004 024B     		ldr	r3, .L53
 653 0006 1B78     		ldrb	r3, [r3]
 654 0008 DBB2     		uxtb	r3, r3
 845:.\Generated_Source\PSoC4/PWM_1.c ****     }
 655              		.loc 1 845 0
 656 000a 181C     		mov	r0, r3
 657 000c BD46     		mov	sp, r7
 658              		@ sp needed
 659 000e 80BD     		pop	{r7, pc}
 660              	.L54:
 661              		.align	2
 662              	.L53:
 663 0010 23000F40 		.word	1074724899
 664              		.cfi_endproc
 665              	.LFE17:
 666              		.size	PWM_1_ReadCompare1, .-PWM_1_ReadCompare1
 667              		.section	.text.PWM_1_ReadCompare2,"ax",%progbits
 668              		.align	2
 669              		.global	PWM_1_ReadCompare2
 670              		.code	16
 671              		.thumb_func
 672              		.type	PWM_1_ReadCompare2, %function
 673              	PWM_1_ReadCompare2:
 674              	.LFB18:
 846:.\Generated_Source\PSoC4/PWM_1.c **** 
 847:.\Generated_Source\PSoC4/PWM_1.c **** 
 848:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_1.c ****     *
 852:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_1.c ****     *
 855:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_1.c ****     *
 858:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_1.c ****     *
 861:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_1.c ****     {
 675              		.loc 1 863 0
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 28


 676              		.cfi_startproc
 677 0000 80B5     		push	{r7, lr}
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 681 0002 00AF     		add	r7, sp, #0
 682              		.cfi_def_cfa_register 7
 864:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE2_LSB_PTR));
 683              		.loc 1 864 0
 684 0004 024B     		ldr	r3, .L57
 685 0006 1B78     		ldrb	r3, [r3]
 686 0008 DBB2     		uxtb	r3, r3
 865:.\Generated_Source\PSoC4/PWM_1.c ****     }
 687              		.loc 1 865 0
 688 000a 181C     		mov	r0, r3
 689 000c BD46     		mov	sp, r7
 690              		@ sp needed
 691 000e 80BD     		pop	{r7, pc}
 692              	.L58:
 693              		.align	2
 694              	.L57:
 695 0010 33000F40 		.word	1074724915
 696              		.cfi_endproc
 697              	.LFE18:
 698              		.size	PWM_1_ReadCompare2, .-PWM_1_ReadCompare2
 699              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 700              		.align	2
 701              		.global	PWM_1_ReadPeriod
 702              		.code	16
 703              		.thumb_func
 704              		.type	PWM_1_ReadPeriod, %function
 705              	PWM_1_ReadPeriod:
 706              	.LFB19:
 866:.\Generated_Source\PSoC4/PWM_1.c **** 
 867:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_1.c **** 
 869:.\Generated_Source\PSoC4/PWM_1.c **** 
 870:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_1.c **** *
 874:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_1.c **** *
 877:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_1.c **** *
 880:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_1.c **** *
 883:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_1.c **** {
 707              		.loc 1 885 0
 708              		.cfi_startproc
 709 0000 80B5     		push	{r7, lr}
 710              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 29


 711              		.cfi_offset 7, -8
 712              		.cfi_offset 14, -4
 713 0002 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_1.c ****         return ((uint8)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_PERIOD_LSB_PTR));
 715              		.loc 1 889 0
 716 0004 024B     		ldr	r3, .L61
 717 0006 1B78     		ldrb	r3, [r3]
 718 0008 DBB2     		uxtb	r3, r3
 890:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_1.c **** }
 719              		.loc 1 891 0
 720 000a 181C     		mov	r0, r3
 721 000c BD46     		mov	sp, r7
 722              		@ sp needed
 723 000e 80BD     		pop	{r7, pc}
 724              	.L62:
 725              		.align	2
 726              	.L61:
 727 0010 43000F40 		.word	1074724931
 728              		.cfi_endproc
 729              	.LFE19:
 730              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 731              		.text
 732              	.Letext0:
 733              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 734              		.section	.debug_info,"",%progbits
 735              	.Ldebug_info0:
 736 0000 BA020000 		.4byte	0x2ba
 737 0004 0400     		.2byte	0x4
 738 0006 00000000 		.4byte	.Ldebug_abbrev0
 739 000a 04       		.byte	0x4
 740 000b 01       		.uleb128 0x1
 741 000c E4000000 		.4byte	.LASF40
 742 0010 01       		.byte	0x1
 743 0011 C9020000 		.4byte	.LASF41
 744 0015 98000000 		.4byte	.LASF42
 745 0019 00000000 		.4byte	.Ldebug_ranges0+0
 746 001d 00000000 		.4byte	0
 747 0021 00000000 		.4byte	.Ldebug_line0
 748 0025 02       		.uleb128 0x2
 749 0026 01       		.byte	0x1
 750 0027 06       		.byte	0x6
 751 0028 15030000 		.4byte	.LASF0
 752 002c 02       		.uleb128 0x2
 753 002d 01       		.byte	0x1
 754 002e 08       		.byte	0x8
 755 002f 60010000 		.4byte	.LASF1
 756 0033 02       		.uleb128 0x2
 757 0034 02       		.byte	0x2
 758 0035 05       		.byte	0x5
 759 0036 FE010000 		.4byte	.LASF2
 760 003a 02       		.uleb128 0x2
 761 003b 02       		.byte	0x2
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 30


 762 003c 07       		.byte	0x7
 763 003d 5D000000 		.4byte	.LASF3
 764 0041 02       		.uleb128 0x2
 765 0042 04       		.byte	0x4
 766 0043 05       		.byte	0x5
 767 0044 07030000 		.4byte	.LASF4
 768 0048 02       		.uleb128 0x2
 769 0049 04       		.byte	0x4
 770 004a 07       		.byte	0x7
 771 004b 84010000 		.4byte	.LASF5
 772 004f 02       		.uleb128 0x2
 773 0050 08       		.byte	0x8
 774 0051 05       		.byte	0x5
 775 0052 81020000 		.4byte	.LASF6
 776 0056 02       		.uleb128 0x2
 777 0057 08       		.byte	0x8
 778 0058 07       		.byte	0x7
 779 0059 4D020000 		.4byte	.LASF7
 780 005d 03       		.uleb128 0x3
 781 005e 04       		.byte	0x4
 782 005f 05       		.byte	0x5
 783 0060 696E7400 		.ascii	"int\000"
 784 0064 02       		.uleb128 0x2
 785 0065 04       		.byte	0x4
 786 0066 07       		.byte	0x7
 787 0067 40020000 		.4byte	.LASF8
 788 006b 04       		.uleb128 0x4
 789 006c 96010000 		.4byte	.LASF12
 790 0070 02       		.byte	0x2
 791 0071 A1       		.byte	0xa1
 792 0072 2C000000 		.4byte	0x2c
 793 0076 02       		.uleb128 0x2
 794 0077 04       		.byte	0x4
 795 0078 04       		.byte	0x4
 796 0079 DE000000 		.4byte	.LASF9
 797 007d 02       		.uleb128 0x2
 798 007e 08       		.byte	0x8
 799 007f 04       		.byte	0x4
 800 0080 D4010000 		.4byte	.LASF10
 801 0084 02       		.uleb128 0x2
 802 0085 01       		.byte	0x1
 803 0086 08       		.byte	0x8
 804 0087 10030000 		.4byte	.LASF11
 805 008b 05       		.uleb128 0x5
 806 008c 6E010000 		.4byte	.LASF13
 807 0090 02       		.byte	0x2
 808 0091 4B01     		.2byte	0x14b
 809 0093 97000000 		.4byte	0x97
 810 0097 06       		.uleb128 0x6
 811 0098 6B000000 		.4byte	0x6b
 812 009c 02       		.uleb128 0x2
 813 009d 04       		.byte	0x4
 814 009e 07       		.byte	0x7
 815 009f 78020000 		.4byte	.LASF14
 816 00a3 07       		.uleb128 0x7
 817 00a4 29030000 		.4byte	.LASF17
 818 00a8 01       		.byte	0x1
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 31


 819 00a9 37       		.byte	0x37
 820 00aa 00000000 		.4byte	.LFB2
 821 00ae 24000000 		.4byte	.LFE2-.LFB2
 822 00b2 01       		.uleb128 0x1
 823 00b3 9C       		.byte	0x9c
 824 00b4 08       		.uleb128 0x8
 825 00b5 35020000 		.4byte	.LASF20
 826 00b9 01       		.byte	0x1
 827 00ba 54       		.byte	0x54
 828 00bb 00000000 		.4byte	.LFB3
 829 00bf 8C000000 		.4byte	.LFE3-.LFB3
 830 00c3 01       		.uleb128 0x1
 831 00c4 9C       		.byte	0x9c
 832 00c5 E6000000 		.4byte	0xe6
 833 00c9 09       		.uleb128 0x9
 834 00ca 73020000 		.4byte	.LASF15
 835 00ce 01       		.byte	0x1
 836 00cf 57       		.byte	0x57
 837 00d0 6B000000 		.4byte	0x6b
 838 00d4 02       		.uleb128 0x2
 839 00d5 91       		.byte	0x91
 840 00d6 6F       		.sleb128 -17
 841 00d7 09       		.uleb128 0x9
 842 00d8 DB010000 		.4byte	.LASF16
 843 00dc 01       		.byte	0x1
 844 00dd 5D       		.byte	0x5d
 845 00de 6B000000 		.4byte	0x6b
 846 00e2 02       		.uleb128 0x2
 847 00e3 91       		.byte	0x91
 848 00e4 6E       		.sleb128 -18
 849 00e5 00       		.byte	0
 850 00e6 0A       		.uleb128 0xa
 851 00e7 00000000 		.4byte	.LASF18
 852 00eb 01       		.byte	0x1
 853 00ec C7       		.byte	0xc7
 854 00ed 00000000 		.4byte	.LFB4
 855 00f1 20000000 		.4byte	.LFE4-.LFB4
 856 00f5 01       		.uleb128 0x1
 857 00f6 9C       		.byte	0x9c
 858 00f7 0A       		.uleb128 0xa
 859 00f8 FC020000 		.4byte	.LASF19
 860 00fc 01       		.byte	0x1
 861 00fd E9       		.byte	0xe9
 862 00fe 00000000 		.4byte	.LFB5
 863 0102 1C000000 		.4byte	.LFE5-.LFB5
 864 0106 01       		.uleb128 0x1
 865 0107 9C       		.byte	0x9c
 866 0108 0B       		.uleb128 0xb
 867 0109 0D000000 		.4byte	.LASF21
 868 010d 01       		.byte	0x1
 869 010e 9301     		.2byte	0x193
 870 0110 00000000 		.4byte	.LFB6
 871 0114 20000000 		.4byte	.LFE6-.LFB6
 872 0118 01       		.uleb128 0x1
 873 0119 9C       		.byte	0x9c
 874 011a 2E010000 		.4byte	0x12e
 875 011e 0C       		.uleb128 0xc
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 32


 876 011f 64020000 		.4byte	.LASF24
 877 0123 01       		.byte	0x1
 878 0124 9301     		.2byte	0x193
 879 0126 6B000000 		.4byte	0x6b
 880 012a 02       		.uleb128 0x2
 881 012b 91       		.byte	0x91
 882 012c 77       		.sleb128 -9
 883 012d 00       		.byte	0
 884 012e 0D       		.uleb128 0xd
 885 012f EA020000 		.4byte	.LASF31
 886 0133 01       		.byte	0x1
 887 0134 A901     		.2byte	0x1a9
 888 0136 6B000000 		.4byte	0x6b
 889 013a 00000000 		.4byte	.LFB7
 890 013e 1C000000 		.4byte	.LFE7-.LFB7
 891 0142 01       		.uleb128 0x1
 892 0143 9C       		.byte	0x9c
 893 0144 0E       		.uleb128 0xe
 894 0145 20000000 		.4byte	.LASF22
 895 0149 01       		.byte	0x1
 896 014a C501     		.2byte	0x1c5
 897 014c 00000000 		.4byte	.LFB8
 898 0150 1C000000 		.4byte	.LFE8-.LFB8
 899 0154 01       		.uleb128 0x1
 900 0155 9C       		.byte	0x9c
 901 0156 0B       		.uleb128 0xb
 902 0157 B7020000 		.4byte	.LASF23
 903 015b 01       		.byte	0x1
 904 015c E201     		.2byte	0x1e2
 905 015e 00000000 		.4byte	.LFB9
 906 0162 20000000 		.4byte	.LFE9-.LFB9
 907 0166 01       		.uleb128 0x1
 908 0167 9C       		.byte	0x9c
 909 0168 7C010000 		.4byte	0x17c
 910 016c 0C       		.uleb128 0xc
 911 016d 30000000 		.4byte	.LASF25
 912 0171 01       		.byte	0x1
 913 0172 E201     		.2byte	0x1e2
 914 0174 6B000000 		.4byte	0x6b
 915 0178 02       		.uleb128 0x2
 916 0179 91       		.byte	0x91
 917 017a 77       		.sleb128 -9
 918 017b 00       		.byte	0
 919 017c 0B       		.uleb128 0xb
 920 017d 70000000 		.4byte	.LASF26
 921 0181 01       		.byte	0x1
 922 0182 2B02     		.2byte	0x22b
 923 0184 00000000 		.4byte	.LFB10
 924 0188 20000000 		.4byte	.LFE10-.LFB10
 925 018c 01       		.uleb128 0x1
 926 018d 9C       		.byte	0x9c
 927 018e A2010000 		.4byte	0x1a2
 928 0192 0C       		.uleb128 0xc
 929 0193 21030000 		.4byte	.LASF27
 930 0197 01       		.byte	0x1
 931 0198 2B02     		.2byte	0x22b
 932 019a 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 33


 933 019e 02       		.uleb128 0x2
 934 019f 91       		.byte	0x91
 935 01a0 77       		.sleb128 -9
 936 01a1 00       		.byte	0
 937 01a2 0B       		.uleb128 0xb
 938 01a3 84000000 		.4byte	.LASF28
 939 01a7 01       		.byte	0x1
 940 01a8 4802     		.2byte	0x248
 941 01aa 00000000 		.4byte	.LFB11
 942 01ae 20000000 		.4byte	.LFE11-.LFB11
 943 01b2 01       		.uleb128 0x1
 944 01b3 9C       		.byte	0x9c
 945 01b4 C8010000 		.4byte	0x1c8
 946 01b8 0C       		.uleb128 0xc
 947 01b9 21030000 		.4byte	.LASF27
 948 01bd 01       		.byte	0x1
 949 01be 4802     		.2byte	0x248
 950 01c0 6B000000 		.4byte	0x6b
 951 01c4 02       		.uleb128 0x2
 952 01c5 91       		.byte	0x91
 953 01c6 77       		.sleb128 -9
 954 01c7 00       		.byte	0
 955 01c8 0B       		.uleb128 0xb
 956 01c9 A4010000 		.4byte	.LASF29
 957 01cd 01       		.byte	0x1
 958 01ce AC02     		.2byte	0x2ac
 959 01d0 00000000 		.4byte	.LFB12
 960 01d4 20000000 		.4byte	.LFE12-.LFB12
 961 01d8 01       		.uleb128 0x1
 962 01d9 9C       		.byte	0x9c
 963 01da EE010000 		.4byte	0x1ee
 964 01de 0C       		.uleb128 0xc
 965 01df A9020000 		.4byte	.LASF30
 966 01e3 01       		.byte	0x1
 967 01e4 AC02     		.2byte	0x2ac
 968 01e6 6B000000 		.4byte	0x6b
 969 01ea 02       		.uleb128 0x2
 970 01eb 91       		.byte	0x91
 971 01ec 77       		.sleb128 -9
 972 01ed 00       		.byte	0
 973 01ee 0D       		.uleb128 0xd
 974 01ef BB010000 		.4byte	.LASF32
 975 01f3 01       		.byte	0x1
 976 01f4 C702     		.2byte	0x2c7
 977 01f6 6B000000 		.4byte	0x6b
 978 01fa 00000000 		.4byte	.LFB13
 979 01fe 14000000 		.4byte	.LFE13-.LFB13
 980 0202 01       		.uleb128 0x1
 981 0203 9C       		.byte	0x9c
 982 0204 0F       		.uleb128 0xf
 983 0205 8F020000 		.4byte	.LASF43
 984 0209 01       		.byte	0x1
 985 020a E102     		.2byte	0x2e1
 986 020c 6B000000 		.4byte	0x6b
 987 0210 00000000 		.4byte	.LFB14
 988 0214 20000000 		.4byte	.LFE14-.LFB14
 989 0218 01       		.uleb128 0x1
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 34


 990 0219 9C       		.byte	0x9c
 991 021a 2E020000 		.4byte	0x22e
 992 021e 10       		.uleb128 0x10
 993 021f 6C020000 		.4byte	.LASF33
 994 0223 01       		.byte	0x1
 995 0224 E302     		.2byte	0x2e3
 996 0226 6B000000 		.4byte	0x6b
 997 022a 02       		.uleb128 0x2
 998 022b 91       		.byte	0x91
 999 022c 77       		.sleb128 -9
 1000 022d 00       		.byte	0
 1001 022e 0B       		.uleb128 0xb
 1002 022f 1A020000 		.4byte	.LASF34
 1003 0233 01       		.byte	0x1
 1004 0234 FD02     		.2byte	0x2fd
 1005 0236 00000000 		.4byte	.LFB15
 1006 023a 20000000 		.4byte	.LFE15-.LFB15
 1007 023e 01       		.uleb128 0x1
 1008 023f 9C       		.byte	0x9c
 1009 0240 54020000 		.4byte	0x254
 1010 0244 0C       		.uleb128 0xc
 1011 0245 9C010000 		.4byte	.LASF35
 1012 0249 01       		.byte	0x1
 1013 024a FD02     		.2byte	0x2fd
 1014 024c 6B000000 		.4byte	0x6b
 1015 0250 02       		.uleb128 0x2
 1016 0251 91       		.byte	0x91
 1017 0252 77       		.sleb128 -9
 1018 0253 00       		.byte	0
 1019 0254 0D       		.uleb128 0xd
 1020 0255 08020000 		.4byte	.LASF36
 1021 0259 01       		.byte	0x1
 1022 025a 1603     		.2byte	0x316
 1023 025c 6B000000 		.4byte	0x6b
 1024 0260 00000000 		.4byte	.LFB16
 1025 0264 14000000 		.4byte	.LFE16-.LFB16
 1026 0268 01       		.uleb128 0x1
 1027 0269 9C       		.byte	0x9c
 1028 026a 0D       		.uleb128 0xd
 1029 026b 37000000 		.4byte	.LASF37
 1030 026f 01       		.byte	0x1
 1031 0270 4A03     		.2byte	0x34a
 1032 0272 6B000000 		.4byte	0x6b
 1033 0276 00000000 		.4byte	.LFB17
 1034 027a 14000000 		.4byte	.LFE17-.LFB17
 1035 027e 01       		.uleb128 0x1
 1036 027f 9C       		.byte	0x9c
 1037 0280 0D       		.uleb128 0xd
 1038 0281 4A000000 		.4byte	.LASF38
 1039 0285 01       		.byte	0x1
 1040 0286 5E03     		.2byte	0x35e
 1041 0288 6B000000 		.4byte	0x6b
 1042 028c 00000000 		.4byte	.LFB18
 1043 0290 14000000 		.4byte	.LFE18-.LFB18
 1044 0294 01       		.uleb128 0x1
 1045 0295 9C       		.byte	0x9c
 1046 0296 0D       		.uleb128 0xd
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 35


 1047 0297 73010000 		.4byte	.LASF39
 1048 029b 01       		.byte	0x1
 1049 029c 7403     		.2byte	0x374
 1050 029e 6B000000 		.4byte	0x6b
 1051 02a2 00000000 		.4byte	.LFB19
 1052 02a6 14000000 		.4byte	.LFE19-.LFB19
 1053 02aa 01       		.uleb128 0x1
 1054 02ab 9C       		.byte	0x9c
 1055 02ac 11       		.uleb128 0x11
 1056 02ad F0010000 		.4byte	.LASF44
 1057 02b1 01       		.byte	0x1
 1058 02b2 20       		.byte	0x20
 1059 02b3 6B000000 		.4byte	0x6b
 1060 02b7 05       		.uleb128 0x5
 1061 02b8 03       		.byte	0x3
 1062 02b9 00000000 		.4byte	PWM_1_initVar
 1063 02bd 00       		.byte	0
 1064              		.section	.debug_abbrev,"",%progbits
 1065              	.Ldebug_abbrev0:
 1066 0000 01       		.uleb128 0x1
 1067 0001 11       		.uleb128 0x11
 1068 0002 01       		.byte	0x1
 1069 0003 25       		.uleb128 0x25
 1070 0004 0E       		.uleb128 0xe
 1071 0005 13       		.uleb128 0x13
 1072 0006 0B       		.uleb128 0xb
 1073 0007 03       		.uleb128 0x3
 1074 0008 0E       		.uleb128 0xe
 1075 0009 1B       		.uleb128 0x1b
 1076 000a 0E       		.uleb128 0xe
 1077 000b 55       		.uleb128 0x55
 1078 000c 17       		.uleb128 0x17
 1079 000d 11       		.uleb128 0x11
 1080 000e 01       		.uleb128 0x1
 1081 000f 10       		.uleb128 0x10
 1082 0010 17       		.uleb128 0x17
 1083 0011 00       		.byte	0
 1084 0012 00       		.byte	0
 1085 0013 02       		.uleb128 0x2
 1086 0014 24       		.uleb128 0x24
 1087 0015 00       		.byte	0
 1088 0016 0B       		.uleb128 0xb
 1089 0017 0B       		.uleb128 0xb
 1090 0018 3E       		.uleb128 0x3e
 1091 0019 0B       		.uleb128 0xb
 1092 001a 03       		.uleb128 0x3
 1093 001b 0E       		.uleb128 0xe
 1094 001c 00       		.byte	0
 1095 001d 00       		.byte	0
 1096 001e 03       		.uleb128 0x3
 1097 001f 24       		.uleb128 0x24
 1098 0020 00       		.byte	0
 1099 0021 0B       		.uleb128 0xb
 1100 0022 0B       		.uleb128 0xb
 1101 0023 3E       		.uleb128 0x3e
 1102 0024 0B       		.uleb128 0xb
 1103 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 36


 1104 0026 08       		.uleb128 0x8
 1105 0027 00       		.byte	0
 1106 0028 00       		.byte	0
 1107 0029 04       		.uleb128 0x4
 1108 002a 16       		.uleb128 0x16
 1109 002b 00       		.byte	0
 1110 002c 03       		.uleb128 0x3
 1111 002d 0E       		.uleb128 0xe
 1112 002e 3A       		.uleb128 0x3a
 1113 002f 0B       		.uleb128 0xb
 1114 0030 3B       		.uleb128 0x3b
 1115 0031 0B       		.uleb128 0xb
 1116 0032 49       		.uleb128 0x49
 1117 0033 13       		.uleb128 0x13
 1118 0034 00       		.byte	0
 1119 0035 00       		.byte	0
 1120 0036 05       		.uleb128 0x5
 1121 0037 16       		.uleb128 0x16
 1122 0038 00       		.byte	0
 1123 0039 03       		.uleb128 0x3
 1124 003a 0E       		.uleb128 0xe
 1125 003b 3A       		.uleb128 0x3a
 1126 003c 0B       		.uleb128 0xb
 1127 003d 3B       		.uleb128 0x3b
 1128 003e 05       		.uleb128 0x5
 1129 003f 49       		.uleb128 0x49
 1130 0040 13       		.uleb128 0x13
 1131 0041 00       		.byte	0
 1132 0042 00       		.byte	0
 1133 0043 06       		.uleb128 0x6
 1134 0044 35       		.uleb128 0x35
 1135 0045 00       		.byte	0
 1136 0046 49       		.uleb128 0x49
 1137 0047 13       		.uleb128 0x13
 1138 0048 00       		.byte	0
 1139 0049 00       		.byte	0
 1140 004a 07       		.uleb128 0x7
 1141 004b 2E       		.uleb128 0x2e
 1142 004c 00       		.byte	0
 1143 004d 3F       		.uleb128 0x3f
 1144 004e 19       		.uleb128 0x19
 1145 004f 03       		.uleb128 0x3
 1146 0050 0E       		.uleb128 0xe
 1147 0051 3A       		.uleb128 0x3a
 1148 0052 0B       		.uleb128 0xb
 1149 0053 3B       		.uleb128 0x3b
 1150 0054 0B       		.uleb128 0xb
 1151 0055 27       		.uleb128 0x27
 1152 0056 19       		.uleb128 0x19
 1153 0057 11       		.uleb128 0x11
 1154 0058 01       		.uleb128 0x1
 1155 0059 12       		.uleb128 0x12
 1156 005a 06       		.uleb128 0x6
 1157 005b 40       		.uleb128 0x40
 1158 005c 18       		.uleb128 0x18
 1159 005d 9642     		.uleb128 0x2116
 1160 005f 19       		.uleb128 0x19
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 37


 1161 0060 00       		.byte	0
 1162 0061 00       		.byte	0
 1163 0062 08       		.uleb128 0x8
 1164 0063 2E       		.uleb128 0x2e
 1165 0064 01       		.byte	0x1
 1166 0065 3F       		.uleb128 0x3f
 1167 0066 19       		.uleb128 0x19
 1168 0067 03       		.uleb128 0x3
 1169 0068 0E       		.uleb128 0xe
 1170 0069 3A       		.uleb128 0x3a
 1171 006a 0B       		.uleb128 0xb
 1172 006b 3B       		.uleb128 0x3b
 1173 006c 0B       		.uleb128 0xb
 1174 006d 27       		.uleb128 0x27
 1175 006e 19       		.uleb128 0x19
 1176 006f 11       		.uleb128 0x11
 1177 0070 01       		.uleb128 0x1
 1178 0071 12       		.uleb128 0x12
 1179 0072 06       		.uleb128 0x6
 1180 0073 40       		.uleb128 0x40
 1181 0074 18       		.uleb128 0x18
 1182 0075 9642     		.uleb128 0x2116
 1183 0077 19       		.uleb128 0x19
 1184 0078 01       		.uleb128 0x1
 1185 0079 13       		.uleb128 0x13
 1186 007a 00       		.byte	0
 1187 007b 00       		.byte	0
 1188 007c 09       		.uleb128 0x9
 1189 007d 34       		.uleb128 0x34
 1190 007e 00       		.byte	0
 1191 007f 03       		.uleb128 0x3
 1192 0080 0E       		.uleb128 0xe
 1193 0081 3A       		.uleb128 0x3a
 1194 0082 0B       		.uleb128 0xb
 1195 0083 3B       		.uleb128 0x3b
 1196 0084 0B       		.uleb128 0xb
 1197 0085 49       		.uleb128 0x49
 1198 0086 13       		.uleb128 0x13
 1199 0087 02       		.uleb128 0x2
 1200 0088 18       		.uleb128 0x18
 1201 0089 00       		.byte	0
 1202 008a 00       		.byte	0
 1203 008b 0A       		.uleb128 0xa
 1204 008c 2E       		.uleb128 0x2e
 1205 008d 00       		.byte	0
 1206 008e 3F       		.uleb128 0x3f
 1207 008f 19       		.uleb128 0x19
 1208 0090 03       		.uleb128 0x3
 1209 0091 0E       		.uleb128 0xe
 1210 0092 3A       		.uleb128 0x3a
 1211 0093 0B       		.uleb128 0xb
 1212 0094 3B       		.uleb128 0x3b
 1213 0095 0B       		.uleb128 0xb
 1214 0096 27       		.uleb128 0x27
 1215 0097 19       		.uleb128 0x19
 1216 0098 11       		.uleb128 0x11
 1217 0099 01       		.uleb128 0x1
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 38


 1218 009a 12       		.uleb128 0x12
 1219 009b 06       		.uleb128 0x6
 1220 009c 40       		.uleb128 0x40
 1221 009d 18       		.uleb128 0x18
 1222 009e 9742     		.uleb128 0x2117
 1223 00a0 19       		.uleb128 0x19
 1224 00a1 00       		.byte	0
 1225 00a2 00       		.byte	0
 1226 00a3 0B       		.uleb128 0xb
 1227 00a4 2E       		.uleb128 0x2e
 1228 00a5 01       		.byte	0x1
 1229 00a6 3F       		.uleb128 0x3f
 1230 00a7 19       		.uleb128 0x19
 1231 00a8 03       		.uleb128 0x3
 1232 00a9 0E       		.uleb128 0xe
 1233 00aa 3A       		.uleb128 0x3a
 1234 00ab 0B       		.uleb128 0xb
 1235 00ac 3B       		.uleb128 0x3b
 1236 00ad 05       		.uleb128 0x5
 1237 00ae 27       		.uleb128 0x27
 1238 00af 19       		.uleb128 0x19
 1239 00b0 11       		.uleb128 0x11
 1240 00b1 01       		.uleb128 0x1
 1241 00b2 12       		.uleb128 0x12
 1242 00b3 06       		.uleb128 0x6
 1243 00b4 40       		.uleb128 0x40
 1244 00b5 18       		.uleb128 0x18
 1245 00b6 9742     		.uleb128 0x2117
 1246 00b8 19       		.uleb128 0x19
 1247 00b9 01       		.uleb128 0x1
 1248 00ba 13       		.uleb128 0x13
 1249 00bb 00       		.byte	0
 1250 00bc 00       		.byte	0
 1251 00bd 0C       		.uleb128 0xc
 1252 00be 05       		.uleb128 0x5
 1253 00bf 00       		.byte	0
 1254 00c0 03       		.uleb128 0x3
 1255 00c1 0E       		.uleb128 0xe
 1256 00c2 3A       		.uleb128 0x3a
 1257 00c3 0B       		.uleb128 0xb
 1258 00c4 3B       		.uleb128 0x3b
 1259 00c5 05       		.uleb128 0x5
 1260 00c6 49       		.uleb128 0x49
 1261 00c7 13       		.uleb128 0x13
 1262 00c8 02       		.uleb128 0x2
 1263 00c9 18       		.uleb128 0x18
 1264 00ca 00       		.byte	0
 1265 00cb 00       		.byte	0
 1266 00cc 0D       		.uleb128 0xd
 1267 00cd 2E       		.uleb128 0x2e
 1268 00ce 00       		.byte	0
 1269 00cf 3F       		.uleb128 0x3f
 1270 00d0 19       		.uleb128 0x19
 1271 00d1 03       		.uleb128 0x3
 1272 00d2 0E       		.uleb128 0xe
 1273 00d3 3A       		.uleb128 0x3a
 1274 00d4 0B       		.uleb128 0xb
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 39


 1275 00d5 3B       		.uleb128 0x3b
 1276 00d6 05       		.uleb128 0x5
 1277 00d7 27       		.uleb128 0x27
 1278 00d8 19       		.uleb128 0x19
 1279 00d9 49       		.uleb128 0x49
 1280 00da 13       		.uleb128 0x13
 1281 00db 11       		.uleb128 0x11
 1282 00dc 01       		.uleb128 0x1
 1283 00dd 12       		.uleb128 0x12
 1284 00de 06       		.uleb128 0x6
 1285 00df 40       		.uleb128 0x40
 1286 00e0 18       		.uleb128 0x18
 1287 00e1 9742     		.uleb128 0x2117
 1288 00e3 19       		.uleb128 0x19
 1289 00e4 00       		.byte	0
 1290 00e5 00       		.byte	0
 1291 00e6 0E       		.uleb128 0xe
 1292 00e7 2E       		.uleb128 0x2e
 1293 00e8 00       		.byte	0
 1294 00e9 3F       		.uleb128 0x3f
 1295 00ea 19       		.uleb128 0x19
 1296 00eb 03       		.uleb128 0x3
 1297 00ec 0E       		.uleb128 0xe
 1298 00ed 3A       		.uleb128 0x3a
 1299 00ee 0B       		.uleb128 0xb
 1300 00ef 3B       		.uleb128 0x3b
 1301 00f0 05       		.uleb128 0x5
 1302 00f1 27       		.uleb128 0x27
 1303 00f2 19       		.uleb128 0x19
 1304 00f3 11       		.uleb128 0x11
 1305 00f4 01       		.uleb128 0x1
 1306 00f5 12       		.uleb128 0x12
 1307 00f6 06       		.uleb128 0x6
 1308 00f7 40       		.uleb128 0x40
 1309 00f8 18       		.uleb128 0x18
 1310 00f9 9642     		.uleb128 0x2116
 1311 00fb 19       		.uleb128 0x19
 1312 00fc 00       		.byte	0
 1313 00fd 00       		.byte	0
 1314 00fe 0F       		.uleb128 0xf
 1315 00ff 2E       		.uleb128 0x2e
 1316 0100 01       		.byte	0x1
 1317 0101 3F       		.uleb128 0x3f
 1318 0102 19       		.uleb128 0x19
 1319 0103 03       		.uleb128 0x3
 1320 0104 0E       		.uleb128 0xe
 1321 0105 3A       		.uleb128 0x3a
 1322 0106 0B       		.uleb128 0xb
 1323 0107 3B       		.uleb128 0x3b
 1324 0108 05       		.uleb128 0x5
 1325 0109 27       		.uleb128 0x27
 1326 010a 19       		.uleb128 0x19
 1327 010b 49       		.uleb128 0x49
 1328 010c 13       		.uleb128 0x13
 1329 010d 11       		.uleb128 0x11
 1330 010e 01       		.uleb128 0x1
 1331 010f 12       		.uleb128 0x12
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 40


 1332 0110 06       		.uleb128 0x6
 1333 0111 40       		.uleb128 0x40
 1334 0112 18       		.uleb128 0x18
 1335 0113 9742     		.uleb128 0x2117
 1336 0115 19       		.uleb128 0x19
 1337 0116 01       		.uleb128 0x1
 1338 0117 13       		.uleb128 0x13
 1339 0118 00       		.byte	0
 1340 0119 00       		.byte	0
 1341 011a 10       		.uleb128 0x10
 1342 011b 34       		.uleb128 0x34
 1343 011c 00       		.byte	0
 1344 011d 03       		.uleb128 0x3
 1345 011e 0E       		.uleb128 0xe
 1346 011f 3A       		.uleb128 0x3a
 1347 0120 0B       		.uleb128 0xb
 1348 0121 3B       		.uleb128 0x3b
 1349 0122 05       		.uleb128 0x5
 1350 0123 49       		.uleb128 0x49
 1351 0124 13       		.uleb128 0x13
 1352 0125 02       		.uleb128 0x2
 1353 0126 18       		.uleb128 0x18
 1354 0127 00       		.byte	0
 1355 0128 00       		.byte	0
 1356 0129 11       		.uleb128 0x11
 1357 012a 34       		.uleb128 0x34
 1358 012b 00       		.byte	0
 1359 012c 03       		.uleb128 0x3
 1360 012d 0E       		.uleb128 0xe
 1361 012e 3A       		.uleb128 0x3a
 1362 012f 0B       		.uleb128 0xb
 1363 0130 3B       		.uleb128 0x3b
 1364 0131 0B       		.uleb128 0xb
 1365 0132 49       		.uleb128 0x49
 1366 0133 13       		.uleb128 0x13
 1367 0134 3F       		.uleb128 0x3f
 1368 0135 19       		.uleb128 0x19
 1369 0136 02       		.uleb128 0x2
 1370 0137 18       		.uleb128 0x18
 1371 0138 00       		.byte	0
 1372 0139 00       		.byte	0
 1373 013a 00       		.byte	0
 1374              		.section	.debug_aranges,"",%progbits
 1375 0000 A4000000 		.4byte	0xa4
 1376 0004 0200     		.2byte	0x2
 1377 0006 00000000 		.4byte	.Ldebug_info0
 1378 000a 04       		.byte	0x4
 1379 000b 00       		.byte	0
 1380 000c 0000     		.2byte	0
 1381 000e 0000     		.2byte	0
 1382 0010 00000000 		.4byte	.LFB2
 1383 0014 24000000 		.4byte	.LFE2-.LFB2
 1384 0018 00000000 		.4byte	.LFB3
 1385 001c 8C000000 		.4byte	.LFE3-.LFB3
 1386 0020 00000000 		.4byte	.LFB4
 1387 0024 20000000 		.4byte	.LFE4-.LFB4
 1388 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 41


 1389 002c 1C000000 		.4byte	.LFE5-.LFB5
 1390 0030 00000000 		.4byte	.LFB6
 1391 0034 20000000 		.4byte	.LFE6-.LFB6
 1392 0038 00000000 		.4byte	.LFB7
 1393 003c 1C000000 		.4byte	.LFE7-.LFB7
 1394 0040 00000000 		.4byte	.LFB8
 1395 0044 1C000000 		.4byte	.LFE8-.LFB8
 1396 0048 00000000 		.4byte	.LFB9
 1397 004c 20000000 		.4byte	.LFE9-.LFB9
 1398 0050 00000000 		.4byte	.LFB10
 1399 0054 20000000 		.4byte	.LFE10-.LFB10
 1400 0058 00000000 		.4byte	.LFB11
 1401 005c 20000000 		.4byte	.LFE11-.LFB11
 1402 0060 00000000 		.4byte	.LFB12
 1403 0064 20000000 		.4byte	.LFE12-.LFB12
 1404 0068 00000000 		.4byte	.LFB13
 1405 006c 14000000 		.4byte	.LFE13-.LFB13
 1406 0070 00000000 		.4byte	.LFB14
 1407 0074 20000000 		.4byte	.LFE14-.LFB14
 1408 0078 00000000 		.4byte	.LFB15
 1409 007c 20000000 		.4byte	.LFE15-.LFB15
 1410 0080 00000000 		.4byte	.LFB16
 1411 0084 14000000 		.4byte	.LFE16-.LFB16
 1412 0088 00000000 		.4byte	.LFB17
 1413 008c 14000000 		.4byte	.LFE17-.LFB17
 1414 0090 00000000 		.4byte	.LFB18
 1415 0094 14000000 		.4byte	.LFE18-.LFB18
 1416 0098 00000000 		.4byte	.LFB19
 1417 009c 14000000 		.4byte	.LFE19-.LFB19
 1418 00a0 00000000 		.4byte	0
 1419 00a4 00000000 		.4byte	0
 1420              		.section	.debug_ranges,"",%progbits
 1421              	.Ldebug_ranges0:
 1422 0000 00000000 		.4byte	.LFB2
 1423 0004 24000000 		.4byte	.LFE2
 1424 0008 00000000 		.4byte	.LFB3
 1425 000c 8C000000 		.4byte	.LFE3
 1426 0010 00000000 		.4byte	.LFB4
 1427 0014 20000000 		.4byte	.LFE4
 1428 0018 00000000 		.4byte	.LFB5
 1429 001c 1C000000 		.4byte	.LFE5
 1430 0020 00000000 		.4byte	.LFB6
 1431 0024 20000000 		.4byte	.LFE6
 1432 0028 00000000 		.4byte	.LFB7
 1433 002c 1C000000 		.4byte	.LFE7
 1434 0030 00000000 		.4byte	.LFB8
 1435 0034 1C000000 		.4byte	.LFE8
 1436 0038 00000000 		.4byte	.LFB9
 1437 003c 20000000 		.4byte	.LFE9
 1438 0040 00000000 		.4byte	.LFB10
 1439 0044 20000000 		.4byte	.LFE10
 1440 0048 00000000 		.4byte	.LFB11
 1441 004c 20000000 		.4byte	.LFE11
 1442 0050 00000000 		.4byte	.LFB12
 1443 0054 20000000 		.4byte	.LFE12
 1444 0058 00000000 		.4byte	.LFB13
 1445 005c 14000000 		.4byte	.LFE13
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 42


 1446 0060 00000000 		.4byte	.LFB14
 1447 0064 20000000 		.4byte	.LFE14
 1448 0068 00000000 		.4byte	.LFB15
 1449 006c 20000000 		.4byte	.LFE15
 1450 0070 00000000 		.4byte	.LFB16
 1451 0074 14000000 		.4byte	.LFE16
 1452 0078 00000000 		.4byte	.LFB17
 1453 007c 14000000 		.4byte	.LFE17
 1454 0080 00000000 		.4byte	.LFB18
 1455 0084 14000000 		.4byte	.LFE18
 1456 0088 00000000 		.4byte	.LFB19
 1457 008c 14000000 		.4byte	.LFE19
 1458 0090 00000000 		.4byte	0
 1459 0094 00000000 		.4byte	0
 1460              		.section	.debug_line,"",%progbits
 1461              	.Ldebug_line0:
 1462 0000 AB010000 		.section	.debug_str,"MS",%progbits,1
 1462      02004400 
 1462      00000201 
 1462      FB0E0D00 
 1462      01010101 
 1463              	.LASF18:
 1464 0000 50574D5F 		.ascii	"PWM_1_Enable\000"
 1464      315F456E 
 1464      61626C65 
 1464      00
 1465              	.LASF21:
 1466 000d 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1466      315F5772 
 1466      69746543 
 1466      6F756E74 
 1466      657200
 1467              	.LASF22:
 1468 0020 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1468      315F436C 
 1468      65617246 
 1468      49464F00 
 1469              	.LASF25:
 1470 0030 70657269 		.ascii	"period\000"
 1470      6F6400
 1471              	.LASF37:
 1472 0037 50574D5F 		.ascii	"PWM_1_ReadCompare1\000"
 1472      315F5265 
 1472      6164436F 
 1472      6D706172 
 1472      653100
 1473              	.LASF38:
 1474 004a 50574D5F 		.ascii	"PWM_1_ReadCompare2\000"
 1474      315F5265 
 1474      6164436F 
 1474      6D706172 
 1474      653200
 1475              	.LASF3:
 1476 005d 73686F72 		.ascii	"short unsigned int\000"
 1476      7420756E 
 1476      7369676E 
 1476      65642069 
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 43


 1476      6E7400
 1477              	.LASF26:
 1478 0070 50574D5F 		.ascii	"PWM_1_WriteCompare1\000"
 1478      315F5772 
 1478      69746543 
 1478      6F6D7061 
 1478      72653100 
 1479              	.LASF28:
 1480 0084 50574D5F 		.ascii	"PWM_1_WriteCompare2\000"
 1480      315F5772 
 1480      69746543 
 1480      6F6D7061 
 1480      72653200 
 1481              	.LASF42:
 1482 0098 433A5C55 		.ascii	"C:\\Users\\Kervins\\Documents\\PSoC Creator\\lab 1\\"
 1482      73657273 
 1482      5C4B6572 
 1482      76696E73 
 1482      5C446F63 
 1483 00c6 6C616220 		.ascii	"lab 1.cydsn\\lab 1.cydsn\000"
 1483      312E6379 
 1483      64736E5C 
 1483      6C616220 
 1483      312E6379 
 1484              	.LASF9:
 1485 00de 666C6F61 		.ascii	"float\000"
 1485      7400
 1486              	.LASF40:
 1487 00e4 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1487      4320342E 
 1487      382E3420 
 1487      32303134 
 1487      30353236 
 1488 0117 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1488      20726576 
 1488      6973696F 
 1488      6E203231 
 1488      31333538 
 1489 014a 30202D66 		.ascii	"0 -ffunction-sections\000"
 1489      66756E63 
 1489      74696F6E 
 1489      2D736563 
 1489      74696F6E 
 1490              	.LASF1:
 1491 0160 756E7369 		.ascii	"unsigned char\000"
 1491      676E6564 
 1491      20636861 
 1491      7200
 1492              	.LASF13:
 1493 016e 72656738 		.ascii	"reg8\000"
 1493      00
 1494              	.LASF39:
 1495 0173 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1495      315F5265 
 1495      61645065 
 1495      72696F64 
 1495      00
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 44


 1496              	.LASF5:
 1497 0184 6C6F6E67 		.ascii	"long unsigned int\000"
 1497      20756E73 
 1497      69676E65 
 1497      6420696E 
 1497      7400
 1498              	.LASF12:
 1499 0196 75696E74 		.ascii	"uint8\000"
 1499      3800
 1500              	.LASF35:
 1501 019c 636F6E74 		.ascii	"control\000"
 1501      726F6C00 
 1502              	.LASF29:
 1503 01a4 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1503      315F5365 
 1503      74496E74 
 1503      65727275 
 1503      70744D6F 
 1504              	.LASF32:
 1505 01bb 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1505      315F5265 
 1505      61645374 
 1505      61747573 
 1505      52656769 
 1506              	.LASF10:
 1507 01d4 646F7562 		.ascii	"double\000"
 1507      6C6500
 1508              	.LASF16:
 1509 01db 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1509      315F696E 
 1509      74657272 
 1509      75707453 
 1509      74617465 
 1510              	.LASF44:
 1511 01f0 50574D5F 		.ascii	"PWM_1_initVar\000"
 1511      315F696E 
 1511      69745661 
 1511      7200
 1512              	.LASF2:
 1513 01fe 73686F72 		.ascii	"short int\000"
 1513      7420696E 
 1513      7400
 1514              	.LASF36:
 1515 0208 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1515      315F5265 
 1515      61644361 
 1515      70747572 
 1515      6500
 1516              	.LASF34:
 1517 021a 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1517      315F5772 
 1517      69746543 
 1517      6F6E7472 
 1517      6F6C5265 
 1518              	.LASF20:
 1519 0235 50574D5F 		.ascii	"PWM_1_Init\000"
 1519      315F496E 
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 45


 1519      697400
 1520              	.LASF8:
 1521 0240 756E7369 		.ascii	"unsigned int\000"
 1521      676E6564 
 1521      20696E74 
 1521      00
 1522              	.LASF7:
 1523 024d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1523      206C6F6E 
 1523      6720756E 
 1523      7369676E 
 1523      65642069 
 1524              	.LASF24:
 1525 0264 636F756E 		.ascii	"counter\000"
 1525      74657200 
 1526              	.LASF33:
 1527 026c 72657375 		.ascii	"result\000"
 1527      6C7400
 1528              	.LASF15:
 1529 0273 6374726C 		.ascii	"ctrl\000"
 1529      00
 1530              	.LASF14:
 1531 0278 73697A65 		.ascii	"sizetype\000"
 1531      74797065 
 1531      00
 1532              	.LASF6:
 1533 0281 6C6F6E67 		.ascii	"long long int\000"
 1533      206C6F6E 
 1533      6720696E 
 1533      7400
 1534              	.LASF43:
 1535 028f 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1535      315F5265 
 1535      6164436F 
 1535      6E74726F 
 1535      6C526567 
 1536              	.LASF30:
 1537 02a9 696E7465 		.ascii	"interruptMode\000"
 1537      72727570 
 1537      744D6F64 
 1537      6500
 1538              	.LASF23:
 1539 02b7 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1539      315F5772 
 1539      69746550 
 1539      6572696F 
 1539      6400
 1540              	.LASF41:
 1541 02c9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 1541      6E657261 
 1541      7465645F 
 1541      536F7572 
 1541      63655C50 
 1542              	.LASF31:
 1543 02ea 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1543      315F5265 
 1543      6164436F 
ARM GAS  C:\Users\Kervins\AppData\Local\Temp\ccONc1Jb.s 			page 46


 1543      756E7465 
 1543      7200
 1544              	.LASF19:
 1545 02fc 50574D5F 		.ascii	"PWM_1_Stop\000"
 1545      315F5374 
 1545      6F7000
 1546              	.LASF4:
 1547 0307 6C6F6E67 		.ascii	"long int\000"
 1547      20696E74 
 1547      00
 1548              	.LASF11:
 1549 0310 63686172 		.ascii	"char\000"
 1549      00
 1550              	.LASF0:
 1551 0315 7369676E 		.ascii	"signed char\000"
 1551      65642063 
 1551      68617200 
 1552              	.LASF27:
 1553 0321 636F6D70 		.ascii	"compare\000"
 1553      61726500 
 1554              	.LASF17:
 1555 0329 50574D5F 		.ascii	"PWM_1_Start\000"
 1555      315F5374 
 1555      61727400 
 1556              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
